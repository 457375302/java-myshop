<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jjc.mapper.role.AdminRoleMapper" >
  <resultMap id="BaseResultMap" type="com.jjc.entity.role.AdminRole" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="role_ch_name" property="roleChName" jdbcType="VARCHAR" />
    <result column="role_en_name" property="roleEnName" jdbcType="VARCHAR" />
    <result column="role_type" property="roleType" jdbcType="INTEGER" />
    <result column="role_grade" property="roleGrade" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="create_by" property="createBy" jdbcType="BIGINT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_by" property="updateBy" jdbcType="BIGINT" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, role_ch_name, role_en_name, role_type, role_grade, status, remark, create_by, 
    create_time, update_by, update_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.jjc.entity.role.example.AdminRoleExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from project_admin_role
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="pageStart!=null and pageStart gt -1" >
       limit ${pageStart},${pageSize}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from project_admin_role
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from project_admin_role
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.jjc.entity.role.example.AdminRoleExample" >
    delete from project_admin_role
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jjc.entity.role.AdminRole" >
    insert into project_admin_role (id, role_ch_name, role_en_name, 
      role_type, role_grade, status, 
      remark, create_by, create_time, 
      update_by, update_time)
    values (#{id,jdbcType=BIGINT}, #{roleChName,jdbcType=VARCHAR}, #{roleEnName,jdbcType=VARCHAR}, 
      #{roleType,jdbcType=INTEGER}, #{roleGrade,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, 
      #{remark,jdbcType=VARCHAR}, #{createBy,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateBy,jdbcType=BIGINT}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.jjc.entity.role.AdminRole" >
    insert into project_admin_role
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="roleChName != null" >
        role_ch_name,
      </if>
      <if test="roleEnName != null" >
        role_en_name,
      </if>
      <if test="roleType != null" >
        role_type,
      </if>
      <if test="roleGrade != null" >
        role_grade,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="createBy != null" >
        create_by,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateBy != null" >
        update_by,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="roleChName != null" >
        #{roleChName,jdbcType=VARCHAR},
      </if>
      <if test="roleEnName != null" >
        #{roleEnName,jdbcType=VARCHAR},
      </if>
      <if test="roleType != null" >
        #{roleType,jdbcType=INTEGER},
      </if>
      <if test="roleGrade != null" >
        #{roleGrade,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createBy != null" >
        #{createBy,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null" >
        #{updateBy,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jjc.entity.role.example.AdminRoleExample" resultType="java.lang.Integer" >
    select count(*) from project_admin_role
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update project_admin_role
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.roleChName != null" >
        role_ch_name = #{record.roleChName,jdbcType=VARCHAR},
      </if>
      <if test="record.roleEnName != null" >
        role_en_name = #{record.roleEnName,jdbcType=VARCHAR},
      </if>
      <if test="record.roleType != null" >
        role_type = #{record.roleType,jdbcType=INTEGER},
      </if>
      <if test="record.roleGrade != null" >
        role_grade = #{record.roleGrade,jdbcType=INTEGER},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.createBy != null" >
        create_by = #{record.createBy,jdbcType=BIGINT},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateBy != null" >
        update_by = #{record.updateBy,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update project_admin_role
    set id = #{record.id,jdbcType=BIGINT},
      role_ch_name = #{record.roleChName,jdbcType=VARCHAR},
      role_en_name = #{record.roleEnName,jdbcType=VARCHAR},
      role_type = #{record.roleType,jdbcType=INTEGER},
      role_grade = #{record.roleGrade,jdbcType=INTEGER},
      status = #{record.status,jdbcType=INTEGER},
      remark = #{record.remark,jdbcType=VARCHAR},
      create_by = #{record.createBy,jdbcType=BIGINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_by = #{record.updateBy,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jjc.entity.role.AdminRole" >
    update project_admin_role
    <set >
      <if test="roleChName != null" >
        role_ch_name = #{roleChName,jdbcType=VARCHAR},
      </if>
      <if test="roleEnName != null" >
        role_en_name = #{roleEnName,jdbcType=VARCHAR},
      </if>
      <if test="roleType != null" >
        role_type = #{roleType,jdbcType=INTEGER},
      </if>
      <if test="roleGrade != null" >
        role_grade = #{roleGrade,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createBy != null" >
        create_by = #{createBy,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null" >
        update_by = #{updateBy,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jjc.entity.role.AdminRole" >
    update project_admin_role
    set role_ch_name = #{roleChName,jdbcType=VARCHAR},
      role_en_name = #{roleEnName,jdbcType=VARCHAR},
      role_type = #{roleType,jdbcType=INTEGER},
      role_grade = #{roleGrade,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR},
      create_by = #{createBy,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_by = #{updateBy,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>